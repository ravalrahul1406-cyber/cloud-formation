{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "create front-end back-end database",
    "Resources": {
        "user1": {
            "Type": "AWS::IAM::User",
            "Properties": {
                "UserName": "dev",
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/AmazonEC2FullAccess"
                ]
            }
        },
        "user2": {
            "Type": "AWS::IAM::User",
            "Properties": {
                "UserName": "test",
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/AmazonEC2FullAccess"
                ]
            }
        },
        "user3": {
            "Type": "AWS::IAM::User",
            "Properties": {
                "UserName": "admin",
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/AmazonEC2FullAccess"
                ]
            }
        },
        "user4": {
            "Type": "AWS::IAM::User",
            "Properties": {
                "UserName": "manager",
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/AdministratorAccess"
                ]
            }
        },
        "mybucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "BucketName": "macpln1414",
                "PublicAccessBlockConfiguration": {
                    "BlockPublicAcls": true,
                    "BlockPublicPolicy": true,
                    "IgnorePublicAcls": true,
                    "RestrictPublicBuckets": true
                }
            }
        },
        "mybucket1": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "BucketName": "macpln1452",
                "PublicAccessBlockConfiguration": {
                    "BlockPublicAcls": false,
                    "BlockPublicPolicy": false,
                    "IgnorePublicAcls": false,
                    "RestrictPublicBuckets": false
                }
            }
        },
        "mybucketpolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
                "Bucket": {
                    "Ref": "mybucket1"
                },
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "Statement1",
                            "Effect": "Allow",
                            "Principal": "*",
                            "Action": "s3:*",
                            "Resource": {
                                "Fn::Sub": "arn:aws:s3:::${mybucket1}/*"
                            }
                        }
                    ]
                }
            }
        },
        "myvpc": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": "10.0.0.0/16",
                "EnableDnsHostnames": true,
                "EnableDnsSupport": true,
                "Tags": [
                    {
                        "Key": "name",
                        "Value": "myvpc"
                    }
                ]
            }
        },
        "publicsubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Select": [
                        0,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": "10.0.1.0/24",
                "MapPublicIpOnLaunch": true,
                "VpcId": {
                    "Ref": "myvpc"
                },
                "Tags": [
                    {
                        "Key": "name",
                        "Value": "publicsubnet"
                    }
                ]
            }
        },
        "myigw": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "name",
                        "Value": "myigw"
                    }
                ]
            }
        },
        "attachmentgy": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "InternetGatewayId": {
                    "Ref": "myigw"
                },
                "VpcId": {
                    "Ref": "myvpc"
                }
            }
        },
        "routetable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "Tags": [
                    {
                        "Key": "name",
                        "Value": "routetable"
                    }
                ],
                "VpcId": {
                    "Ref": "myvpc"
                }
            }
        },
        "myroute": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "routetable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "myigw"
                }
            }
        },
        "subnetassociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "routetable"
                },
                "SubnetId": {
                    "Ref": "publicsubnet"
                }
            }
        },
        "privatesubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": {
                    "Fn::Select": [
                        0,
                        {
                            "Fn::GetAZs": ""
                        }
                    ]
                },
                "CidrBlock": "10.0.2.0/24",
                "MapPublicIpOnLaunch": false,
                "VpcId": {
                    "Ref": "myvpc"
                },
                "Tags": [
                    {
                        "Key": "name",
                        "Value": "privatesubnet"
                    }
                ]
            }
        },
        "eip": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc",
                "Tags": [
                    {
                        "Key": "name",
                        "Value": "eip"
                    }
                ]
            }
        },
        "natgw": {
            "Type": "AWS::EC2::NatGateway",
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "eip",
                        "AllocationId"
                    ]
                },
                "SubnetId": {
                    "Ref": "publicsubnet"
                },
                "Tags": [
                    {
                        "Key": "name",
                        "Value": "natgw"
                    }
                ]
            }
        },
        "privateroutetable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "Tags": [
                    {
                        "Key": "name",
                        "Value": "privateroutetable"
                    }
                ],
                "VpcId": {
                    "Ref": "myvpc"
                }
            }
        },
        "myrouteprivate": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "privateroutetable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "NatGatewayId": {
                    "Ref": "natgw"
                }
            }
        },
        "subnetassociation2": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "privateroutetable"
                },
                "SubnetId": {
                    "Ref": "privatesubnet"
                }
            }
        },
        "mysg": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Allow shh",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": 22,
                        "ToPort": 22,
                        "CidrIp": "0.0.0.0/0"
                    }
                ],
                "VpcId": {
                    "Ref": "myvpc"
                }
            }
        },
        "myinstance1": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "ImageId": "ami-07f07a6e1060cd2a8",
                "InstanceType": "t2.micro",
                "KeyName": "server1",
                "SubnetId": {
                    "Ref": "publicsubnet"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "mysg"
                    }
                ],
                "IamInstanceProfile": "s3fullaccess",
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/xvdf",
                        "Ebs": {
                            "VolumeSize": 10,
                            "VolumeType": "gp3"
                        }
                    }
                ]
            }
        },
        "myinstance2": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "ImageId": "ami-02d26659fd82cf299",
                "InstanceType": "t2.micro",
                "KeyName": "server2",
                "SubnetId": {
                    "Ref": "privatesubnet"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "mysg"
                    }
                ],
                "IamInstanceProfile": "s3fullaccess",
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/xvdf",
                        "Ebs": {
                            "VolumeSize": 10,
                            "VolumeType": "gp3"
                        }
                    }
                ]
            }
        },
        "myinstance3": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "ImageId": "ami-0338ab7bf038aed53",
                "InstanceType": "t2.micro",
                "KeyName": "server3",
                "SubnetId": {
                    "Ref": "privatesubnet"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "mysg"
                    }
                ],
                "IamInstanceProfile": "s3fullaccess",
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/xvdf",
                        "Ebs": {
                            "VolumeSize": 10,
                            "VolumeType": "gp3"
                        }
                    }
                ]
            }
        }
    }
}